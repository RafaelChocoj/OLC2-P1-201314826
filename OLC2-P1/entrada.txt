//println!(5);
//println!( ((3*2+1) as f64) +2.5 );

//println!( (3 as i64) );
//println!( (2.2 as i64) );
//println!( (true as i64) );
//println!( (false as i64) );

//println!( (3 as f64) );
//println!( (2.2 as f64) );
//println!( (true as f64) );
//println!( (false as f64) );

//println!( (5 as f64)+3.4 );
//println!( (7.8 as i64) +1 );
//println!( (4 as f64)-3.45 );
//println!( 12/0 );
//  //println!( 1.0 % 5.0 );

println!(46 % (8 + 1*6)/2);

println!( i64::pow( 2, 2) );

//println!( f64::powf(2.5,3.5) );
    //println!(3*1+i64::pow( 1+1, 2*1)*2/3);

//println!( i64::pow((2.5 as i64), (3.5 as i64) ) );

//println!("hola1".to_owned());
//println!(&&&&&&&&&&"xd3");
//println!("xd444".to_string().to_string());

//println!("hola".to_owned() + &"xd" + " 123" + &&&":)");
//println!("hola".to_string() + &&&"2");
//println!("hola1".to_string() + &&&&"xd1".to_string());

//println!(5 != 2);
//println!(2.0 != 5.5);
//println!("a" != "b");
//println!("b" != "a");  
//println!("a".to_string() != "b".to_owned());

//println!("hola" != "hola");
//println!(3 != 3);

////////////////////
//println!(((5 > 2) || (1 < 2)) );
//println!( 5 > 2 || 1 < 2 && 5 > 10 );
//println!( !5 > 2 || !1 < 2 || 5 > 10 );
//println!(  !(5 > 2 || 1 > 2) );

//println!(true || false);
//println!( !!!!(5 > 2 && 1 < 2) );

println!(!true);
println!(!false);

println!(var1);