// Code generated from RustLex.g4 by ANTLR 4.9.3. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 61, 370,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43, 4, 44,
	9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 4, 47, 9, 47, 4, 48, 9, 48, 4, 49, 9,
	49, 4, 50, 9, 50, 4, 51, 9, 51, 4, 52, 9, 52, 4, 53, 9, 53, 4, 54, 9, 54,
	4, 55, 9, 55, 4, 56, 9, 56, 4, 57, 9, 57, 4, 58, 9, 58, 4, 59, 9, 59, 4,
	60, 9, 60, 4, 61, 9, 61, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2,
	3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 4, 3, 4, 3, 4, 3, 5, 3, 5, 3, 5,
	3, 5, 3, 5, 3, 5, 3, 5, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 7, 3, 7, 3, 7,
	3, 7, 3, 7, 3, 8, 3, 8, 3, 8, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 10, 3, 10,
	3, 10, 3, 10, 3, 10, 3, 10, 3, 11, 3, 11, 3, 12, 3, 12, 3, 12, 3, 12, 3,
	12, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3, 14, 3, 15,
	3, 15, 3, 15, 3, 15, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 17, 3, 17, 3,
	17, 3, 17, 3, 18, 3, 18, 3, 18, 3, 18, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19,
	3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 20, 3, 20, 3,
	20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 21,
	3, 21, 3, 21, 3, 21, 3, 22, 3, 22, 3, 22, 3, 23, 3, 23, 3, 23, 3, 24, 3,
	24, 3, 24, 3, 24, 3, 24, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25,
	3, 26, 6, 26, 253, 10, 26, 13, 26, 14, 26, 254, 3, 27, 6, 27, 258, 10,
	27, 13, 27, 14, 27, 259, 3, 27, 3, 27, 6, 27, 264, 10, 27, 13, 27, 14,
	27, 265, 3, 28, 3, 28, 7, 28, 270, 10, 28, 12, 28, 14, 28, 273, 11, 28,
	3, 28, 3, 28, 3, 29, 3, 29, 3, 30, 3, 30, 3, 31, 3, 31, 3, 32, 3, 32, 3,
	32, 3, 33, 3, 33, 3, 34, 3, 34, 3, 35, 3, 35, 3, 35, 3, 36, 3, 36, 3, 37,
	3, 37, 7, 37, 297, 10, 37, 12, 37, 14, 37, 300, 11, 37, 3, 38, 3, 38, 3,
	38, 3, 39, 3, 39, 3, 39, 3, 40, 3, 40, 3, 40, 3, 41, 3, 41, 3, 41, 3, 42,
	3, 42, 3, 43, 3, 43, 3, 44, 3, 44, 3, 45, 3, 45, 3, 46, 3, 46, 3, 47, 3,
	47, 3, 48, 3, 48, 3, 49, 3, 49, 3, 49, 3, 50, 3, 50, 3, 50, 3, 51, 3, 51,
	3, 52, 3, 52, 3, 53, 3, 53, 3, 54, 3, 54, 3, 55, 3, 55, 3, 56, 3, 56, 3,
	57, 3, 57, 3, 58, 3, 58, 3, 59, 6, 59, 351, 10, 59, 13, 59, 14, 59, 352,
	3, 59, 3, 59, 3, 60, 3, 60, 3, 60, 3, 60, 7, 60, 361, 10, 60, 12, 60, 14,
	60, 364, 11, 60, 3, 60, 3, 60, 3, 61, 3, 61, 3, 61, 2, 2, 62, 3, 3, 5,
	4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25,
	14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41, 22, 43,
	23, 45, 24, 47, 25, 49, 26, 51, 27, 53, 28, 55, 29, 57, 30, 59, 31, 61,
	32, 63, 33, 65, 34, 67, 35, 69, 36, 71, 37, 73, 38, 75, 39, 77, 40, 79,
	41, 81, 42, 83, 43, 85, 44, 87, 45, 89, 46, 91, 47, 93, 48, 95, 49, 97,
	50, 99, 51, 101, 52, 103, 53, 105, 54, 107, 55, 109, 56, 111, 57, 113,
	58, 115, 59, 117, 60, 119, 61, 121, 2, 3, 2, 10, 3, 2, 50, 59, 3, 2, 48,
	48, 3, 2, 36, 36, 5, 2, 67, 92, 97, 97, 99, 124, 6, 2, 50, 59, 67, 92,
	97, 97, 99, 124, 6, 2, 11, 12, 15, 15, 34, 34, 94, 94, 4, 2, 12, 12, 15,
	15, 9, 2, 34, 35, 37, 37, 45, 45, 47, 48, 60, 60, 66, 66, 93, 95, 2, 375,
	2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2,
	2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2,
	2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2,
	2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3,
	2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41,
	3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2,
	49, 3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2,
	2, 57, 3, 2, 2, 2, 2, 59, 3, 2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2,
	2, 2, 65, 3, 2, 2, 2, 2, 67, 3, 2, 2, 2, 2, 69, 3, 2, 2, 2, 2, 71, 3, 2,
	2, 2, 2, 73, 3, 2, 2, 2, 2, 75, 3, 2, 2, 2, 2, 77, 3, 2, 2, 2, 2, 79, 3,
	2, 2, 2, 2, 81, 3, 2, 2, 2, 2, 83, 3, 2, 2, 2, 2, 85, 3, 2, 2, 2, 2, 87,
	3, 2, 2, 2, 2, 89, 3, 2, 2, 2, 2, 91, 3, 2, 2, 2, 2, 93, 3, 2, 2, 2, 2,
	95, 3, 2, 2, 2, 2, 97, 3, 2, 2, 2, 2, 99, 3, 2, 2, 2, 2, 101, 3, 2, 2,
	2, 2, 103, 3, 2, 2, 2, 2, 105, 3, 2, 2, 2, 2, 107, 3, 2, 2, 2, 2, 109,
	3, 2, 2, 2, 2, 111, 3, 2, 2, 2, 2, 113, 3, 2, 2, 2, 2, 115, 3, 2, 2, 2,
	2, 117, 3, 2, 2, 2, 2, 119, 3, 2, 2, 2, 3, 123, 3, 2, 2, 2, 5, 132, 3,
	2, 2, 2, 7, 136, 3, 2, 2, 2, 9, 140, 3, 2, 2, 2, 11, 147, 3, 2, 2, 2, 13,
	152, 3, 2, 2, 2, 15, 157, 3, 2, 2, 2, 17, 160, 3, 2, 2, 2, 19, 165, 3,
	2, 2, 2, 21, 171, 3, 2, 2, 2, 23, 173, 3, 2, 2, 2, 25, 178, 3, 2, 2, 2,
	27, 184, 3, 2, 2, 2, 29, 187, 3, 2, 2, 2, 31, 191, 3, 2, 2, 2, 33, 196,
	3, 2, 2, 2, 35, 200, 3, 2, 2, 2, 37, 204, 3, 2, 2, 2, 39, 217, 3, 2, 2,
	2, 41, 229, 3, 2, 2, 2, 43, 233, 3, 2, 2, 2, 45, 236, 3, 2, 2, 2, 47, 239,
	3, 2, 2, 2, 49, 244, 3, 2, 2, 2, 51, 252, 3, 2, 2, 2, 53, 257, 3, 2, 2,
	2, 55, 267, 3, 2, 2, 2, 57, 276, 3, 2, 2, 2, 59, 278, 3, 2, 2, 2, 61, 280,
	3, 2, 2, 2, 63, 282, 3, 2, 2, 2, 65, 285, 3, 2, 2, 2, 67, 287, 3, 2, 2,
	2, 69, 289, 3, 2, 2, 2, 71, 292, 3, 2, 2, 2, 73, 294, 3, 2, 2, 2, 75, 301,
	3, 2, 2, 2, 77, 304, 3, 2, 2, 2, 79, 307, 3, 2, 2, 2, 81, 310, 3, 2, 2,
	2, 83, 313, 3, 2, 2, 2, 85, 315, 3, 2, 2, 2, 87, 317, 3, 2, 2, 2, 89, 319,
	3, 2, 2, 2, 91, 321, 3, 2, 2, 2, 93, 323, 3, 2, 2, 2, 95, 325, 3, 2, 2,
	2, 97, 327, 3, 2, 2, 2, 99, 330, 3, 2, 2, 2, 101, 333, 3, 2, 2, 2, 103,
	335, 3, 2, 2, 2, 105, 337, 3, 2, 2, 2, 107, 339, 3, 2, 2, 2, 109, 341,
	3, 2, 2, 2, 111, 343, 3, 2, 2, 2, 113, 345, 3, 2, 2, 2, 115, 347, 3, 2,
	2, 2, 117, 350, 3, 2, 2, 2, 119, 356, 3, 2, 2, 2, 121, 367, 3, 2, 2, 2,
	123, 124, 7, 114, 2, 2, 124, 125, 7, 116, 2, 2, 125, 126, 7, 107, 2, 2,
	126, 127, 7, 112, 2, 2, 127, 128, 7, 118, 2, 2, 128, 129, 7, 110, 2, 2,
	129, 130, 7, 112, 2, 2, 130, 131, 7, 35, 2, 2, 131, 4, 3, 2, 2, 2, 132,
	133, 7, 107, 2, 2, 133, 134, 7, 56, 2, 2, 134, 135, 7, 54, 2, 2, 135, 6,
	3, 2, 2, 2, 136, 137, 7, 104, 2, 2, 137, 138, 7, 56, 2, 2, 138, 139, 7,
	54, 2, 2, 139, 8, 3, 2, 2, 2, 140, 141, 7, 85, 2, 2, 141, 142, 7, 118,
	2, 2, 142, 143, 7, 116, 2, 2, 143, 144, 7, 107, 2, 2, 144, 145, 7, 112,
	2, 2, 145, 146, 7, 105, 2, 2, 146, 10, 3, 2, 2, 2, 147, 148, 7, 100, 2,
	2, 148, 149, 7, 113, 2, 2, 149, 150, 7, 113, 2, 2, 150, 151, 7, 110, 2,
	2, 151, 12, 3, 2, 2, 2, 152, 153, 7, 40, 2, 2, 153, 154, 7, 117, 2, 2,
	154, 155, 7, 118, 2, 2, 155, 156, 7, 116, 2, 2, 156, 14, 3, 2, 2, 2, 157,
	158, 7, 107, 2, 2, 158, 159, 7, 104, 2, 2, 159, 16, 3, 2, 2, 2, 160, 161,
	7, 103, 2, 2, 161, 162, 7, 110, 2, 2, 162, 163, 7, 117, 2, 2, 163, 164,
	7, 103, 2, 2, 164, 18, 3, 2, 2, 2, 165, 166, 7, 111, 2, 2, 166, 167, 7,
	99, 2, 2, 167, 168, 7, 118, 2, 2, 168, 169, 7, 101, 2, 2, 169, 170, 7,
	106, 2, 2, 170, 20, 3, 2, 2, 2, 171, 172, 7, 126, 2, 2, 172, 22, 3, 2,
	2, 2, 173, 174, 7, 118, 2, 2, 174, 175, 7, 116, 2, 2, 175, 176, 7, 119,
	2, 2, 176, 177, 7, 103, 2, 2, 177, 24, 3, 2, 2, 2, 178, 179, 7, 104, 2,
	2, 179, 180, 7, 99, 2, 2, 180, 181, 7, 110, 2, 2, 181, 182, 7, 117, 2,
	2, 182, 183, 7, 103, 2, 2, 183, 26, 3, 2, 2, 2, 184, 185, 7, 99, 2, 2,
	185, 186, 7, 117, 2, 2, 186, 28, 3, 2, 2, 2, 187, 188, 7, 114, 2, 2, 188,
	189, 7, 113, 2, 2, 189, 190, 7, 121, 2, 2, 190, 30, 3, 2, 2, 2, 191, 192,
	7, 114, 2, 2, 192, 193, 7, 113, 2, 2, 193, 194, 7, 121, 2, 2, 194, 195,
	7, 104, 2, 2, 195, 32, 3, 2, 2, 2, 196, 197, 7, 110, 2, 2, 197, 198, 7,
	103, 2, 2, 198, 199, 7, 118, 2, 2, 199, 34, 3, 2, 2, 2, 200, 201, 7, 111,
	2, 2, 201, 202, 7, 119, 2, 2, 202, 203, 7, 118, 2, 2, 203, 36, 3, 2, 2,
	2, 204, 205, 7, 48, 2, 2, 205, 206, 7, 118, 2, 2, 206, 207, 7, 113, 2,
	2, 207, 208, 7, 97, 2, 2, 208, 209, 7, 117, 2, 2, 209, 210, 7, 118, 2,
	2, 210, 211, 7, 116, 2, 2, 211, 212, 7, 107, 2, 2, 212, 213, 7, 112, 2,
	2, 213, 214, 7, 105, 2, 2, 214, 215, 7, 42, 2, 2, 215, 216, 7, 43, 2, 2,
	216, 38, 3, 2, 2, 2, 217, 218, 7, 48, 2, 2, 218, 219, 7, 118, 2, 2, 219,
	220, 7, 113, 2, 2, 220, 221, 7, 97, 2, 2, 221, 222, 7, 113, 2, 2, 222,
	223, 7, 121, 2, 2, 223, 224, 7, 112, 2, 2, 224, 225, 7, 103, 2, 2, 225,
	226, 7, 102, 2, 2, 226, 227, 7, 42, 2, 2, 227, 228, 7, 43, 2, 2, 228, 40,
	3, 2, 2, 2, 229, 230, 7, 114, 2, 2, 230, 231, 7, 119, 2, 2, 231, 232, 7,
	100, 2, 2, 232, 42, 3, 2, 2, 2, 233, 234, 7, 47, 2, 2, 234, 235, 7, 64,
	2, 2, 235, 44, 3, 2, 2, 2, 236, 237, 7, 104, 2, 2, 237, 238, 7, 112, 2,
	2, 238, 46, 3, 2, 2, 2, 239, 240, 7, 111, 2, 2, 240, 241, 7, 99, 2, 2,
	241, 242, 7, 107, 2, 2, 242, 243, 7, 112, 2, 2, 243, 48, 3, 2, 2, 2, 244,
	245, 7, 116, 2, 2, 245, 246, 7, 103, 2, 2, 246, 247, 7, 118, 2, 2, 247,
	248, 7, 119, 2, 2, 248, 249, 7, 116, 2, 2, 249, 250, 7, 112, 2, 2, 250,
	50, 3, 2, 2, 2, 251, 253, 9, 2, 2, 2, 252, 251, 3, 2, 2, 2, 253, 254, 3,
	2, 2, 2, 254, 252, 3, 2, 2, 2, 254, 255, 3, 2, 2, 2, 255, 52, 3, 2, 2,
	2, 256, 258, 9, 2, 2, 2, 257, 256, 3, 2, 2, 2, 258, 259, 3, 2, 2, 2, 259,
	257, 3, 2, 2, 2, 259, 260, 3, 2, 2, 2, 260, 261, 3, 2, 2, 2, 261, 263,
	9, 3, 2, 2, 262, 264, 9, 2, 2, 2, 263, 262, 3, 2, 2, 2, 264, 265, 3, 2,
	2, 2, 265, 263, 3, 2, 2, 2, 265, 266, 3, 2, 2, 2, 266, 54, 3, 2, 2, 2,
	267, 271, 7, 36, 2, 2, 268, 270, 10, 4, 2, 2, 269, 268, 3, 2, 2, 2, 270,
	273, 3, 2, 2, 2, 271, 269, 3, 2, 2, 2, 271, 272, 3, 2, 2, 2, 272, 274,
	3, 2, 2, 2, 273, 271, 3, 2, 2, 2, 274, 275, 7, 36, 2, 2, 275, 56, 3, 2,
	2, 2, 276, 277, 7, 48, 2, 2, 277, 58, 3, 2, 2, 2, 278, 279, 7, 46, 2, 2,
	279, 60, 3, 2, 2, 2, 280, 281, 7, 61, 2, 2, 281, 62, 3, 2, 2, 2, 282, 283,
	7, 60, 2, 2, 283, 284, 7, 60, 2, 2, 284, 64, 3, 2, 2, 2, 285, 286, 7, 60,
	2, 2, 286, 66, 3, 2, 2, 2, 287, 288, 7, 63, 2, 2, 288, 68, 3, 2, 2, 2,
	289, 290, 7, 63, 2, 2, 290, 291, 7, 64, 2, 2, 291, 70, 3, 2, 2, 2, 292,
	293, 7, 97, 2, 2, 293, 72, 3, 2, 2, 2, 294, 298, 9, 5, 2, 2, 295, 297,
	9, 6, 2, 2, 296, 295, 3, 2, 2, 2, 297, 300, 3, 2, 2, 2, 298, 296, 3, 2,
	2, 2, 298, 299, 3, 2, 2, 2, 299, 74, 3, 2, 2, 2, 300, 298, 3, 2, 2, 2,
	301, 302, 7, 35, 2, 2, 302, 303, 7, 63, 2, 2, 303, 76, 3, 2, 2, 2, 304,
	305, 7, 63, 2, 2, 305, 306, 7, 63, 2, 2, 306, 78, 3, 2, 2, 2, 307, 308,
	7, 64, 2, 2, 308, 309, 7, 63, 2, 2, 309, 80, 3, 2, 2, 2, 310, 311, 7, 62,
	2, 2, 311, 312, 7, 63, 2, 2, 312, 82, 3, 2, 2, 2, 313, 314, 7, 64, 2, 2,
	314, 84, 3, 2, 2, 2, 315, 316, 7, 62, 2, 2, 316, 86, 3, 2, 2, 2, 317, 318,
	7, 44, 2, 2, 318, 88, 3, 2, 2, 2, 319, 320, 7, 49, 2, 2, 320, 90, 3, 2,
	2, 2, 321, 322, 7, 45, 2, 2, 322, 92, 3, 2, 2, 2, 323, 324, 7, 47, 2, 2,
	324, 94, 3, 2, 2, 2, 325, 326, 7, 39, 2, 2, 326, 96, 3, 2, 2, 2, 327, 328,
	7, 40, 2, 2, 328, 329, 7, 40, 2, 2, 329, 98, 3, 2, 2, 2, 330, 331, 7, 126,
	2, 2, 331, 332, 7, 126, 2, 2, 332, 100, 3, 2, 2, 2, 333, 334, 7, 35, 2,
	2, 334, 102, 3, 2, 2, 2, 335, 336, 7, 40, 2, 2, 336, 104, 3, 2, 2, 2, 337,
	338, 7, 42, 2, 2, 338, 106, 3, 2, 2, 2, 339, 340, 7, 43, 2, 2, 340, 108,
	3, 2, 2, 2, 341, 342, 7, 125, 2, 2, 342, 110, 3, 2, 2, 2, 343, 344, 7,
	127, 2, 2, 344, 112, 3, 2, 2, 2, 345, 346, 7, 93, 2, 2, 346, 114, 3, 2,
	2, 2, 347, 348, 7, 95, 2, 2, 348, 116, 3, 2, 2, 2, 349, 351, 9, 7, 2, 2,
	350, 349, 3, 2, 2, 2, 351, 352, 3, 2, 2, 2, 352, 350, 3, 2, 2, 2, 352,
	353, 3, 2, 2, 2, 353, 354, 3, 2, 2, 2, 354, 355, 8, 59, 2, 2, 355, 118,
	3, 2, 2, 2, 356, 357, 7, 49, 2, 2, 357, 358, 7, 49, 2, 2, 358, 362, 3,
	2, 2, 2, 359, 361, 10, 8, 2, 2, 360, 359, 3, 2, 2, 2, 361, 364, 3, 2, 2,
	2, 362, 360, 3, 2, 2, 2, 362, 363, 3, 2, 2, 2, 363, 365, 3, 2, 2, 2, 364,
	362, 3, 2, 2, 2, 365, 366, 8, 60, 2, 2, 366, 120, 3, 2, 2, 2, 367, 368,
	7, 94, 2, 2, 368, 369, 9, 9, 2, 2, 369, 122, 3, 2, 2, 2, 10, 2, 254, 259,
	265, 271, 298, 352, 362, 3, 8, 2, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'println!'", "'i64'", "'f64'", "'String'", "'bool'", "'&str'", "'if'",
	"'else'", "'match'", "'|'", "'true'", "'false'", "'as'", "'pow'", "'powf'",
	"'let'", "'mut'", "'.to_string()'", "'.to_owned()'", "'pub'", "'->'", "'fn'",
	"'main'", "'return'", "", "", "", "'.'", "','", "';'", "'::'", "':'", "'='",
	"'=>'", "'_'", "", "'!='", "'=='", "'>='", "'<='", "'>'", "'<'", "'*'",
	"'/'", "'+'", "'-'", "'%'", "'&&'", "'||'", "'!'", "'&'", "'('", "')'",
	"'{'", "'}'", "'['", "']'",
}

var lexerSymbolicNames = []string{
	"", "PRINT_CON", "T_NUMBER", "T_FLOAT", "T_STRING", "T_BOOL", "T_STR",
	"IF", "ELSE", "MATCH", "MTOR", "TRUE", "FALSE", "AS", "POW", "POWF", "LET",
	"MUT", "TO_STRING", "TO_OWNED", "PUBLIC", "TYPETHEN", "FN", "MAIN", "RETURN",
	"NUMBER", "FLOAT", "STRING", "PUNTO", "COMA", "PTCOMA", "DOSPUNTO", "DPUNTO2",
	"ASIGNACION", "MTHEN", "GUIONB", "ID", "DISTINTO", "IGUAL", "MAYORIGUAL",
	"MENORIGUAL", "MAYOR", "MENOR", "MUL", "DIV", "ADD", "SUB", "MOD", "AND",
	"OR", "NOT", "AMP", "PARIZQ", "PARDER", "LLAVEIZQ", "LLAVEDER", "CORIZQ",
	"CORDER", "WHITESPACE", "L_COMMENT",
}

var lexerRuleNames = []string{
	"PRINT_CON", "T_NUMBER", "T_FLOAT", "T_STRING", "T_BOOL", "T_STR", "IF",
	"ELSE", "MATCH", "MTOR", "TRUE", "FALSE", "AS", "POW", "POWF", "LET", "MUT",
	"TO_STRING", "TO_OWNED", "PUBLIC", "TYPETHEN", "FN", "MAIN", "RETURN",
	"NUMBER", "FLOAT", "STRING", "PUNTO", "COMA", "PTCOMA", "DOSPUNTO", "DPUNTO2",
	"ASIGNACION", "MTHEN", "GUIONB", "ID", "DISTINTO", "IGUAL", "MAYORIGUAL",
	"MENORIGUAL", "MAYOR", "MENOR", "MUL", "DIV", "ADD", "SUB", "MOD", "AND",
	"OR", "NOT", "AMP", "PARIZQ", "PARDER", "LLAVEIZQ", "LLAVEDER", "CORIZQ",
	"CORDER", "WHITESPACE", "L_COMMENT", "ESC_SEQ",
}

type RustLex struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewRustLex produces a new lexer instance for the optional input antlr.CharStream.
//
// The *RustLex instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewRustLex(input antlr.CharStream) *RustLex {
	l := new(RustLex)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "RustLex.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// RustLex tokens.
const (
	RustLexPRINT_CON  = 1
	RustLexT_NUMBER   = 2
	RustLexT_FLOAT    = 3
	RustLexT_STRING   = 4
	RustLexT_BOOL     = 5
	RustLexT_STR      = 6
	RustLexIF         = 7
	RustLexELSE       = 8
	RustLexMATCH      = 9
	RustLexMTOR       = 10
	RustLexTRUE       = 11
	RustLexFALSE      = 12
	RustLexAS         = 13
	RustLexPOW        = 14
	RustLexPOWF       = 15
	RustLexLET        = 16
	RustLexMUT        = 17
	RustLexTO_STRING  = 18
	RustLexTO_OWNED   = 19
	RustLexPUBLIC     = 20
	RustLexTYPETHEN   = 21
	RustLexFN         = 22
	RustLexMAIN       = 23
	RustLexRETURN     = 24
	RustLexNUMBER     = 25
	RustLexFLOAT      = 26
	RustLexSTRING     = 27
	RustLexPUNTO      = 28
	RustLexCOMA       = 29
	RustLexPTCOMA     = 30
	RustLexDOSPUNTO   = 31
	RustLexDPUNTO2    = 32
	RustLexASIGNACION = 33
	RustLexMTHEN      = 34
	RustLexGUIONB     = 35
	RustLexID         = 36
	RustLexDISTINTO   = 37
	RustLexIGUAL      = 38
	RustLexMAYORIGUAL = 39
	RustLexMENORIGUAL = 40
	RustLexMAYOR      = 41
	RustLexMENOR      = 42
	RustLexMUL        = 43
	RustLexDIV        = 44
	RustLexADD        = 45
	RustLexSUB        = 46
	RustLexMOD        = 47
	RustLexAND        = 48
	RustLexOR         = 49
	RustLexNOT        = 50
	RustLexAMP        = 51
	RustLexPARIZQ     = 52
	RustLexPARDER     = 53
	RustLexLLAVEIZQ   = 54
	RustLexLLAVEDER   = 55
	RustLexCORIZQ     = 56
	RustLexCORDER     = 57
	RustLexWHITESPACE = 58
	RustLexL_COMMENT  = 59
)
