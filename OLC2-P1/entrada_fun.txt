fn recur(mut a:i64) -> i64 {
   if a < 5 
   {
        a = a + 1;
        println!("a {}", a);
        a = recur(a);
        return a;
   } else {
       return a;
   }
   
}

fn main () {
    //let a = recur(2);
    //let a:i64 = suma(2,3);
    //println!(":{}", a);


    //// Expresion loop
    let mut cont = 0;
    let result = loop {
        cont = cont + 1;
        if cont == 10 {
            break cont * 2;
        }
    };
    // Â¡No olvidar el punto y coma!
    println!("El resultado es {}", result);


}

fn suma(mut a:i64, mut b:i64) -> i64 {
    let res = a+b;

    println!("antes");
    return res;

    println!("ejecuta aqui");
}

//fn ack(mut m: i64, mut n: i64) -> i64 {
//    if m == 0 {
//        return n + 1;
//    } else if n == 0 {
//        return ack(m - 1, 1);
//    } else {
//        return ack(m - 1, ack(m, n - 1));
//    }
//}
 
//fn main() {
//    let a = ack(3, 5);
//    println!("{}", a); // 253
//}
