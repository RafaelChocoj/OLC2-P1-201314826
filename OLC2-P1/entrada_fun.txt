fn recur(mut a:i64) -> i64 {
   if a < 5 
   {
        a = a + 1;
        println!("a {}", a);
        a = recur(a);
        return a;
   } else {
       return a;
   }
   
}

fn main () {

let numero = 25;
let saber = loop {
    // DespuÃ©s del match sigue una expresiÃ³n
    match numero {
    // 1 | 2 | 3 estas son coincidencias
    1 | 2 | 3 => {
    let x = 100;
    println!("Rango de 1 a 3");

    println!("x: {}", x);
    
    }, //esto se conoce como brazo
    6 | 7 | 8 => println!("Rango de 6 a 8"),//esto se conoce como brazo
    9 => println!("9"), // esto es un error!
    _ => break 55, //brazo por defecto
    }

    
};
 println!("saber: {}", saber);

}


}



}

fn suma(mut a:i64, mut b:i64) -> i64 {
    let res = a+b;

    println!("antes");
    return res;

    println!("ejecuta aqui");
}

//fn ack(mut m: i64, mut n: i64) -> i64 {
//    if m == 0 {
//        return n + 1;
//    } else if n == 0 {
//        return ack(m - 1, 1);
//    } else {
//        return ack(m - 1, ack(m, n - 1));
//    }
//}
 
//fn main() {
//    let a = ack(3, 5);
//    println!("{}", a); // 253
//}
